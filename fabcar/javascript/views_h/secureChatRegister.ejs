<!DOCTYPE html>
<html lang="en">

<head>
  <title>Secure Chat Register</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="./secureChatRegister.css">
  <link rel="stylesheet" href="./bootstrap-5.1.3-dist/css/bootstrap.min.css">
  <script src="./bootstrap-5.1.3-dist/js/jquery.slim.min.js"></script>
  <script src="./bootstrap-5.1.3-dist/js/popper.min.js"></script>
  <script src="./bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
  <%- include('./header')%>

    <div class="regkey-container">
      <form class="regkey-form">
        <div class="form-group">
          <textarea class="form-control" rows="5" placeholder="Nhập khóa bí mật..." id="privKey"></textarea>
        </div>
        <div style="margin-bottom: 10px;"><span style="color: red;">*</span>
          <span>Đề nghị nhập chuỗi ký tự tạo khóa bí mật và lưu lại khóa sau khi tạo</span>
        </div>
        <div class="encrypted-actions__group">
          <button type="button" onclick="generateKey()" class="btn btn-primary input-btn">Sinh khóa</button>
          <button type="button" onclick="registerKey()" class="btn btn-primary input-btn">Đăng ký khóa</button>
          <button type="button" onclick="saveSecretKey()" class="btn btn-primary input-btn">Lưu khóa</button>
        </div>
      </form>
    </div>

</body>

</html>
<script type="text/javascript" src="./js/cryptico.js"></script>
<script type="text/javascript" src="./js/rsa.js"></script>
<script type="text/javascript" src="./js/jsbn.js"></script>
<script type="text/javascript" src="./js/helper.js"></script>
<script>
  var messagePopup = "";
  var myID_json = sessionStorage.getItem('login_data');

  if (myID_json == null) {
    if (window.confirm('ban khong co quyen truy cap!!!')) {
      window.location.href = '/';
    }
    else {
      window.location.href = '/';
    }
  }
  else {
    var myID = JSON.parse(myID_json)['id'];
    var accessToken = JSON.parse(myID_json).accessToken;
    var refreshToken = JSON.parse(myID_json).refreshToken;
  }


  window.onload = async function () {
    const options = {
      method: 'GET',
      headers: {
        'authorization': 'token ' + accessToken
      }
    };
    var res = await fetch('/authenOnLoad', options);
    var res_json = await res.json();
    if (!res || res.status != 200) {
      if (window.confirm('ban khong co quyen truy cap!!!')) {
        window.location.href = '/';
      }
      else {
        window.location.href = '/';
      }
    }
  }

  window.onload = function checkLogin() {
    console.log('test');
    var check = sessionStorage.getItem('login_data');
    sessionStorage.removeItem('current_partner_id');
    var check_json = JSON.parse(check);
    console.log(check_json);
    if (check_json == null || check_json.isLogin !== true) {
      sessionStorage.clear();
      window.location.replace(END_POINT + '/');
    }
    else {
      toastMessage.innerHTML = 'Yêu cầu đăng ký khóa để nhắn tin mã hóa';
      console.log(toastMessage)
      $(document).ready(function () {
        $('.toast').toast('hide');
        $('.toast').toast('show');
      });
      //sessionStorage.setItem('login_data', check);
      //localStorage.clear();
      fetchData();
    }
  }

  function download(filename, text) {
    var pom = document.createElement('a');
    pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    pom.setAttribute('download', filename);

    if (document.createEvent) {
      var event = document.createEvent('MouseEvents');
      event.initEvent('click', true, true);
      pom.dispatchEvent(event);
    }
    else {
      pom.click();
    }
  }
  async function generateKey() {
    var keyString = document.getElementById('privKey').value;
    if (keyString != '') {
      var Bits = 1024;

      var MessRSAkey = cryptico.generateRSAKey(keyString, Bits); console.log(MessRSAkey);

      var MessRSAkeyPublic = cryptico.publicKeyString(MessRSAkey); console.log(MessRSAkeyPublic)

      let serialKey = serializeRSAKey(MessRSAkey);
      sessionStorage.setItem('privKeyRSA', serialKey);
      toastMessage.innerHTML = 'Sinh khóa thành công!';
      console.log(toastMessage)
      $(document).ready(function () {
        $('.toast').toast('hide');
        $('.toast').toast('show');
      });
    }
    else {
      toastMessage.innerHTML = 'Trường này không được để trống!';
      console.log(toastMessage)
      $(document).ready(function () {
        $('.toast').toast('hide');
        $('.toast').toast('show');
      });
    }
  }
  async function registerKey() {
    const options = {
      method: 'GET',
      headers: {
        'authorization': 'token ' + accessToken,
      }
    }

    var res = await fetch('/checkE2ERegisterAPI?senderID=' + myID + '&receiverID=' + 000, options);
    var json_res = await res.json(); console.log(json_res)
    var keyString = document.getElementById('privKey').value;
    if (json_res.data == 'ok') {
      if (window.confirm('ban da dang ky tin nhan ma hoa dau cuoi.Neu dang ky lai ban se mat toan bo tin nhan ma hoa')) {
        if (sessionStorage.getItem('privKeyRSA')) {
          let RSAkey = deserializeRSAKey(sessionStorage.getItem('privKeyRSA'));
          let publicKey_serial = cryptico.publicKeyString(RSAkey); console.log(publicKey_serial);
          const options_reg = {
            method: 'POST',
            body: JSON.stringify({ 'publicKeyRSA': publicKey_serial }),
            headers: {
              'Content-Type': 'application/json',
              'authorization': 'token ' + accessToken,
            }
          }
          var resReg = await fetch('/registerSecureChat', options_reg);
          var json_resReg = await resReg.json(); console.log(json_resReg)
          if (json_resReg.data == 'ok') {
            toastMessage.innerHTML = 'Đăng ký khóa thành công!';
            console.log(toastMessage)
            $(document).ready(function () {
              $('.toast').toast('hide');
              $('.toast').toast('show');
            })
          }
          else if (json_resReg.data == 'ng') {
            toastMessage.innerHTML = 'Đăng ký khóa thất bại!';
            console.log(toastMessage)
            $(document).ready(function () {
              $('.toast').toast('hide');
              $('.toast').toast('show');
            });
          }
        }
      }
      else {
        //xin cam on
      }
    }
    else if (json_res.data == 'ng') {
      if (sessionStorage.getItem('privKeyRSA')) {
        let RSAkey = deserializeRSAKey(sessionStorage.getItem('privKeyRSA'));
        let publicKey_serial = cryptico.publicKeyString(RSAkey); console.log(publicKey_serial);
        const options_reg = {
          method: 'POST',
          body: JSON.stringify({ 'publicKeyRSA': publicKey_serial }),
          headers: {
            'Content-Type': 'application/json',
            'authorization': 'token ' + accessToken,
          }
        }
        var resReg = await fetch('/registerSecureChat', options_reg);
        var json_resReg = await resReg.json(); console.log(json_resReg)
        if (json_resReg.data == 'ok') {
          toastMessage.innerHTML = 'Đăng ký thành công!';
          console.log(toastMessage)
          $(document).ready(function () {
            $('.toast').toast('hide');
            $('.toast').toast('show');
          });
        }
        else if (json_resReg.data == 'ng') {
          toastMessage.innerHTML = 'Đăng ký thất bại!';
          console.log(toastMessage)
          $(document).ready(function () {
            $('.toast').toast('hide');
            $('.toast').toast('show');
          });
        }
      }
    }
  }

  function saveSecretKey() {
    var keyString = document.getElementById('privKey').value;
    download('keyString', keyString);
  }

  $(document).on('click', '#menu-btn', function () {
    //debugger;
    if ($('.sidebar').hasClass('active')) {
      $('.sidebar').removeClass('active');
      $('.regkey-container').removeClass('scaledown');
    } else {
      $('.sidebar').addClass('active');
      $('.regkey-container').addClass('scaledown');
    }
  })

  $(document).on('click', '.bx-search-alt-2', function () {
    if (!$('.sidebar').hasClass('active')) {
      $('.sidebar').addClass('active');
      $('.regkey-container').addClass('scaledown');
    }
  })

  $(document).on('click', 'a.close', function () {
    $(".overlay").html("");
    $(".overlay").css("display", "none");
  })

</script>